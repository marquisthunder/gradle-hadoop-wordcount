apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

mainClassName = "com.datafinances.sort.MyJob"

repositories {
    flatDir(dirs: file("lib"), name: 'transwarp')
//        mavenCentral()
//        jcenter()
}

dependencies {
    compile ':activation:1.1'
    compile ':aopalliance:1.0'
    compile ':apacheds:i18n:2.0.0-M15'
    compile ':apacheds:kerberos-codec:2.0.0-M15'
    compile ':api:asn1-api:1.0.0-M20'
    compile ':api:util:1.0.0-M20'
    compile ':asm:3.2'
    compile ':avro:1.7.4'
    compile ':commons-beanutils:1.7.0'
    compile ':commons-beanutils-core:1.8.0'
    compile ':commons-cli:1.2'
    compile ':commons-codec:1.4'
    compile ':commons-collections:3.2.1'
    compile ':commons-compress:1.4.1'
    compile ':commons-configuration:1.6'
    compile ':commons-digester:1.8'
    compile ':commons-el:1.0'
    compile ':commons-httpclient:3.1'
    compile ':commons-io:2.4'
    compile ':commons-lang:2.6'
    compile ':commons-logging:1.1.3'
    compile ':commons-math3:3.1.1'
    compile ':commons-net:3.1'
    compile ':guava:11.0.2'
    compile ':guice:3.0'
    compile ':guice-servlet:3.0'
    compile ':hadoop-archives:2.5.2-transwarp'
    compile ':hadoop-auth:2.5.2-transwarp'
    compile ':hadoop-common:2.5.2-transwarp'
    compile ':hadoop-datajoin:2.5.2-transwarp'
    compile ':hadoop-distcp:2.5.2-transwarp'
    compile ':hadoop-extras:2.5.2-transwarp'
    compile ':hadoop-gridmix:2.5.2-transwarp'
    compile ':hadoop-mapreduce-client-app:2.5.2-transwarp'
    compile ':hadoop-mapreduce-client-common:2.5.2-transwarp'
    compile ':hadoop-mapreduce-client-core:2.5.2-transwarp'
    compile ':hadoop-mapreduce-client-hs:2.5.2-transwarp'
    compile ':hadoop-mapreduce-client-hs-plugins:2.5.2-transwarp'
    compile ':hadoop-mapreduce-client-jobclient:2.5.2-transwarp'
    compile ':hadoop-mapreduce-client-jobclient:2.5.2-transwarp-tests'
    compile ':hadoop-mapreduce-client-shuffle:2.5.2-transwarp'
    compile ':hadoop-mapreduce-examples:2.5.2-transwarp'
    compile ':hadoop-openstack:2.5.2-transwarp'
    compile ':hadoop-rumen:2.5.2-transwarp'
    compile ':hadoop-sls:2.5.2-transwarp'
    compile ':hadoop-streaming:2.5.2-transwarp'
    compile ':hamcrest-core:1.3'
    compile ':httpclient:4.2.5'
    compile ':httpcore:4.2.5'
    compile ':jackson-core-asl:1.9.13'
    compile ':jackson-jaxrs:1.9.13'
    compile ':jackson-mapper-asl:1.9.13'
    compile ':jackson-xc:1.9.13'
    compile ':jasper-compiler:5.5.23'
    compile ':jasper-runtime:5.5.23'
    compile ':javax.inject:1'
    compile ':java-xmlbuilder:0.4'
    compile ':javax.servlet-api:3.0.1'
    compile ':jaxb-api:2.2.2'
    compile ':jaxb-impl:2.2.3-1'
    compile ':jersey-core:1.9'
    compile ':jersey-guice:1.9'
    compile ':jersey-json:1.9'
    compile ':jersey-server:1.9'
    compile ':jets3t:0.9.0'
    compile ':jettison:1.1'
    compile ':jetty-6.1.26.transwarp'
    compile ':jetty-util:6.1.26.transwarp'
    compile ':jsch:0.1.50'
    compile ':jsp-api:2.1'
    compile ':jsr305:1.3.9'
    compile ':junit:4.11'
    compile ':jzlib:1.1.2'
    compile ':leveldbjni-all:1.8'
    compile ':log4j:1.2.17'
    compile ':metrics-core:3.0.0'
    compile ':netty:3.6.2.Final'
    compile ':paranamer:2.3'
    compile ':protobuf-java:2.5.0'
    compile ':servlet-api:2.4'
    compile ':snappy-java:1.0.4.1'
    compile ':stax-api:1.0-2'
    compile ':xmlenc:0.52'
    compile ':xz:1.0'
    compile ':zookeeper:3.4.5-transwarp'
    //        classpath 'org.codehaus.groovy:groovy-backports-compat23:2.3.5'
//        classpath 'org.zeroturnaround:zt-exec:1.6'
//        classpath 'me.trnl:clirr-gradle-plugin:0.4'
//        classpath 'de.undercouch:gradle-download-task:1.0'
//        classpath 'com.github.ben-manes:gradle-versions-plugin:0.6'
}


jar {
    manifest {
        attributes 'Main-Class': "$mainClassName"
    }
}


task hadoop(dependsOn: jar, type: Exec) {
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        project.ext.HADOOP_HOME = "$System.env.HADOOP_HOME".replaceAll('\\\\', '/')
        project.ext.HADOOP_CMD = HADOOP_HOME + '/bin/hadoop.cmd'
        commandLine 'cmd', '/c', HADOOP_CMD, 'jar', "$jar.archivePath"
    } else {
        project.ext.HADOOP_HOME = "/usr/lib/hadoop"
        project.ext.HADOOP_CMD = HADOOP_HOME + '/bin/hadoop'
        commandLine HADOOP_CMD, 'jar', "$jar.archivePath"
    }

    if (project.hasProperty('args')) {
        args project.args.split('\\s+')
        args.each { commandLine.push(it) }
    }

    standardOutput = new ByteArrayOutputStream()

    project.ext.output = {
        return standardOutput.toString()
    }
}
